1. 상하좌우 이동 : 대각선도 가능해야하고 누르는순간부터 일정속도로 움직여야함.
-- 발사 및 스킬, 필살기 키입력도 동시에 해야함
-- 일부 유닛은 마우스 스킬/발사도 가능하도록 구현

2. 피탄 판정 : 적 유닛-아군 탄, 아군 유닛 - 적 탄 간 피탄 판정 추가해야함.

3. 배경이미지및 지상 개체는 구현 보류.

4. 등장 유닛 및 이동경로 패턴/데이터화

5. 레이저 피탄 구현 - 이부분은 선분과 점의 거리 공식 써야됨. 노가다보단 수학 공식 쓰는게 대체로 실행속도 몇배정도 빠르니 어쩔 수 없음. 난이도 상
--유니티에서 기본적으로 개체간 충돌 판정을 지원 한다는데, 이걸 이용하면 레이저 구현이 쉬워진다는데.. 유니티 한번 먼저 보고 생각해야겟음
--그런데 유니티가 더 빠르진 않을거같다. 기본적으로 개체 단위기 때문에..

6. 쉴드 구현 : 레이저가 쉴드에 막히는것도 포함해서 구현. 난이도 최상.
--이것도 유니티는 쉬워진다 하더라..

7. 데미지는 스쳐맞는다는 개념은 없음.

8. 피탄때 탄이 관통일경우의 처리도 필요하고

9. 필살 게이지나 필살기 갯수, 라이프 수, 체력 같은것의 구현이나

10. 보스 체력과 패턴을 구현하는데

11. 패턴들을 번호를 매겨가면서 더이상 새로운 유형이 안나올때까지 패턴 유형에 숫자를 지정함.
(원형으로 돌아나가는 탄이나, 나갔다가 돌아오는 탄이나(일정한 가속도), 단순 직선탄이나,
레이저(직선)이나, 레이저(회전)이나.. 만들수록 유형은 계속 늘어남.)

12. 피탄 구현시 피탄 판정은 각 탄이 이동할때마다:자신-캐릭터간 / 캐릭터가 이동할때마다 - 모든 탄간
-- 이게 성능저하가 일어나면, 초당 300~120번 판정으로 일괄처리 시키면됨. 바꾸는건 어렵지 않으므로 일단
-- 사양 신경쓰지 말고 이동순간마다 판정하도록- 최상의 신뢰성을 확보하기.
-- 슈팅게임 특성상 1px 미만의 정밀도를 가져야함. 그러므로 실제 좌표는 해상도와 상관없이 2000이상으로 잡아야함.